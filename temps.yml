NAME: lib-release-name
LAST DEPLOYED: Wed May 10 16:30:39 2023
NAMESPACE: library
STATUS: pending-install
REVISION: 1
HOOKS:
---
# Source: helm/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "lib-release-name-helm-test-connection"
  labels:
    helm.sh/chart: helm-0.1.0
    app.kubernetes.io/name: helm
    app.kubernetes.io/instance: lib-release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['lib-release-name-helm:80']
  restartPolicy: Never
MANIFEST:
---
# Source: helm/templates/ns-mysql.yaml
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: database
spec: {}
status: {}
---
# Source: helm/templates/ns-restapi.yaml
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: restapi
spec: {}
status: {}
---
# Source: helm/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: lib-release-name-helm
  labels:
    helm.sh/chart: helm-0.1.0
    app.kubernetes.io/name: helm
    app.kubernetes.io/instance: lib-release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: helm/templates/secret-mysql.yaml
apiVersion: v1
data:
  rootpassword: b2dlY2gxMjNAMTIzQUJD
kind: Secret
metadata:
  creationTimestamp: null
  name: mysql-password
  namespace: database
---
# Source: helm/templates/secret-restapi.yaml
apiVersion: v1
data:
  rootpassword: b2dlY2gxMjNAMTIzQUJD
kind: Secret
metadata:
  creationTimestamp: null
  name: mysql-password
  namespace: restapi
---
# Source: helm/templates/configmap.yaml
apiVersion: v1
data:
  dbname: library
  host: mysql.database:3306
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: restapi-cm
  namespace: restapi
---
# Source: helm/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  namespace: database 
spec:
  storageClassName: hostpath  
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
# Source: helm/templates/service-mysql.yaml
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: database 
spec:
  ports:
  - port: 3306
  selector:
    app: mysql
  clusterIP: None
---
# Source: helm/templates/service-restapi.yaml
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: restapi
  name: lib-release-name
  namespace: restapi 
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: restapi
status:
  loadBalancer: {}
---
# Source: helm/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: lib-release-name-helm
  labels:
    helm.sh/chart: helm-0.1.0
    app.kubernetes.io/name: helm
    app.kubernetes.io/instance: lib-release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: helm
    app.kubernetes.io/instance: lib-release-name
---
# Source: helm/templates/deployment.yaml
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: mysql
  namespace: database
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: mysql:5.6
        name: mysql
        env:
          # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-password
              key: rootpassword
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
---
# Source: helm/templates/restapi.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: restapi
  name: lib-release-name
  namespace: restapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: restapi
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: restapi
    spec:
      containers:
      - image: viveksinghggits/library:0.1.0
        name: library
        resources: {}
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: restapi-cm
              key: host
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: restapi-cm
              key: dbname
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: mysql-password
              key: rootpassword
status: {}

NOTES:
1. Get the application URL by running these commands:
  export POD_NAME=$(kubectl get pods --namespace library -l "app.kubernetes.io/name=helm,app.kubernetes.io/instance=lib-release-name" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace library $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace library port-forward $POD_NAME 8080:$CONTAINER_PORT
